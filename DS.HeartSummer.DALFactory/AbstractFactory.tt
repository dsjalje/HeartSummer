<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string inputFile = @"..\\DS.HeartSummer.Model\\SummerModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>

using DS.HeartSummer.DAL; 
using System.Configuration; 
using System.Reflection; 

namespace DS.HeartSummer.DALFactory
{
    public partial class AbstractFactory
    {
<#
// Emit Entity Types

foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		 
		public static <#=entity.Name#>DAL Create<#=entity.Name#>()
        { 
            string fullname = nameSpace + ".<#=entity.Name#>DAL"; 
            return CreateInstans(assembly, fullname) as <#=entity.Name#>DAL;
        }



<#}#>
	}	
}